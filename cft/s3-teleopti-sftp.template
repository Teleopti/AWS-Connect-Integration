{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BucketName": {
      "Type": "String",
      "Description": "The S3 bucket where you will sync to and from SFTP."
    },
	"ExistingBucket": {
		"Type": "String",
		"Default": "true",
		"AllowedValues": ["true","false"]
	},
	"SFTPUserName": {
    	"Type": "String",
    	"Description": "The Teleopti provided username for your SFTP account."
    },
    "SFTPPassword": {
    	"Type": "String",
    	"Description": "The Teleopti provided password for your SFTP account."
    },
    "SFTPHostname": {
    	"Type": "String",
    	"Description": "The Teleopti provided hostname of your SFTP server."
    }
  },
  "Conditions": {
  	"CreateBucket": {"Fn::Equals" : [{"Ref" : "ExistingBucket"}, "false"]}
  },
  "Resources": {
    "BridgeRequeue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": { "Ref": "AWS::StackName" },
        "VisibilityTimeout": 60
      }
    },
    "BridgeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogWriter",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "FileSyncher",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    { "Fn::Join":  [ "", [ "arn:aws:s3:::", { "Ref": "BucketName" } ] ] },
                    { "Fn::Join":  [ "", [ "arn:aws:s3:::", { "Ref": "BucketName" } , "/*" ] ] }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "EventRequeuer",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:DeleteMessage",
                    "sqs:GetQueueUrl",
                    "sqs:ReceiveMessage",
                    "sqs:SendMessage"
                  ],
                  "Resource": { "Fn::GetAtt" : [ "BridgeRequeue", "Arn" ] }
                }
              ]
            }
          }
        ]
      }
    },
    "BridgeFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "BucketName" },
          "S3Key": "lambda_functions/s3-teleopti-sftp.zip"
        },
        "FunctionName": { "Ref": "AWS::StackName" },
        "Description": "Used sync files between S3 and SFTP servers.",
        "Environment": {
        	"Variables" : {
  				"s3Location": { "Ref": "BucketName" },
    			"host": { "Ref": "SFTPHostname" },
      			"port": 22,
      			"password": { "Ref": "SFTPPassword" },
      			"username": { "Ref": "SFTPUserName" },
    			"sftpLocation": ""
  			}
		},
        "Handler": "main.handle",
        "MemorySize": "256",
        "Role": { "Fn::GetAtt" : [ "BridgeRole", "Arn" ] },
        "Runtime": "nodejs6.10",
        "Timeout": 300
      },
      "DependsOn": [
        "BridgeRole"
      ]
    },
    "BridgeResourcePolicy": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "BridgeFunction", "Arn" ] },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": { "Ref": "AWS::AccountId" },
        "SourceArn": { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "BucketName" } ] ] }
      },
      "DependsOn": [
        "BridgeFunction"
      ]
    },
    "BridgeBucket": {
      "Type" : "AWS::S3::Bucket",
      "Condition": "CreateBucket",
      "Properties": {
        "BucketName": { "Ref": "BucketName" },
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": { "Fn::GetAtt": [ "BridgeFunction", "Arn" ] }
            }
          ]
        }
      },
      "DependsOn": [
        "BridgeResourcePolicy"
      ]
    },
    "LambdaLogGroup": {
      "Type" : "AWS::Logs::LogGroup",
      "Properties" : {
        "LogGroupName": { "Fn::Join": [ "", [ "/aws/lambda/", { "Ref": "BridgeFunction" } ] ] },
        "RetentionInDays" : 7
      }
    },
    "FunctionTimeoutMetric": {
      "Type": "AWS::Logs::MetricFilter",    
      "Properties": {
        "FilterPattern": "Task timed out",
        "LogGroupName": { "Fn::Join" : ["", [ "/aws/lambda/", { "Ref" : "BridgeFunction" } ] ] },
        "MetricTransformations": [
          {
            "MetricValue": "1",
            "MetricNamespace": { "Ref": "AWS::StackName" },
            "MetricName": "lambda-function-timeouts"
          }
        ]
      },
      "DependsOn": [
        "BridgeFunction", "LambdaLogGroup"
      ]
    },
    "ConnectionTimeoutMetric": {
      "Type": "AWS::Logs::MetricFilter",    
      "Properties": {
        "FilterPattern": "ClientTimeoutException",
        "LogGroupName": { "Fn::Join" : ["", [ "/aws/lambda/", { "Ref" : "BridgeFunction" } ] ] },
        "MetricTransformations": [
          {
            "MetricValue": "1",
            "MetricNamespace": { "Ref": "AWS::StackName" },
            "MetricName": "connection-timeouts"
          }
        ]
      },
      "DependsOn": [
        "BridgeFunction", "LambdaLogGroup"
      ]
    },
    "ErrorMetric": {
      "Type": "AWS::Logs::MetricFilter",    
      "Properties": {
        "FilterPattern": "UnknownException",
        "LogGroupName": { "Fn::Join" : ["", [ "/aws/lambda/", { "Ref" : "BridgeFunction" } ] ] },
        "MetricTransformations": [
          {
            "MetricValue": "1",
            "MetricNamespace": { "Ref": "AWS::StackName" },
            "MetricName": "errors"
          }
        ]
      },
      "DependsOn": [
        "BridgeFunction", "LambdaLogGroup"
      ]
    },
    "S3toSFTPMetric": {
      "Type": "AWS::Logs::MetricFilter",    
      "Properties": {
        "FilterPattern": "[timestamp, requestId, streamName, colon, moved = Moved, numFiles, files = files, from, orig = S3, to, dest = SFTP]",
        "LogGroupName": { "Fn::Join" : ["", [ "/aws/lambda/", { "Ref" : "BridgeFunction" } ] ] },
        "MetricTransformations": [
          {
            "MetricValue": "$numFiles",
            "MetricNamespace": { "Ref": "AWS::StackName" },
            "MetricName": "s3-to-sftp"
          }
        ]
      },
      "DependsOn": [
        "BridgeFunction", "LambdaLogGroup"
      ]
    }
  },
  "Outputs": {
    "BridgeFunctionArn": {
      "Description": "The ARN of the function that moves files between S3 and SFTP.",
      "Value": { "Fn::GetAtt": [ "BridgeFunction", "Arn" ] }
    },
    "BridgeFunctionName": {
      "Description": "The ARN of the function that moves files between S3 and SFTP.",
      "Value": { "Ref": "BridgeFunction" }
    },
    "BridgeFunctionRole": {
      "Description": "The role used by the generated Lambda function, to be added to any KMS keys.",
      "Value": { "Ref": "BridgeRole" }
    }
  }
}
